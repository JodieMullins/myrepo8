--SQL-EASY.COM--

-- Can you return all rows in family_members where num_books_read is a value greater or equal to 180?
SELECT *
FROM family_members
WHERE num_books_read >= 180;


-- Can you find all of Pickles' friends that are dogs and under the height of 45cm?
SELECT * 
FROM friends_of_pickles 
WHERE height_cm < 45
AND species = 'dog';


-- Can you find all of Pickles' friends that are dogs or under the height of 45cm?
SELECT * 
FROM friends_of_pickles 
WHERE species = 'dog' OR height_cm < 45;


-- Can you run a query that would return the rows that are not cats or dogs?
SELECT * FROM friends_of_pickles WHERE species NOT IN ('cat', 'dog');


-- Can you return a list of the distinct species of animals greater than 50cm in height?
SELECT DISTINCT species 
FROM friends_of_pickles 
WHERE height_cm > 50;


-- Can you run a query that sorts the friends_of_pickles by height_cm in descending order?
SELECT * 
FROM friends_of_pickles 
ORDER BY height_cm DESC;


-- Can you return the single row (and all columns) of the tallest friends_of_pickles?
SELECT *
FROM friends_of_pickles
ORDER BY height_cm DESC LIMIT 1;


-- Can you return the number of rows in friends_of_pickles where the species is a dog?
SELECT COUNT(*) FROM friends_of_pickles WHERE species = 'dog';


-- Can you find the total num_books_read made by this family?
SELECT SUM(num_books_read) FROM family_members;


-- Can you find the average num_books_read made by each family member?
SELECT AVG(num_books_read)
FROM family_members;

-- Can you find the highest num_books_read that a family member makes?
SELECT MAX(num_books_read)
FROM family_members;


-- Can you return the tallest height for each species? Remember to return the species name next to the height too, like in the example query.
-- When you GROUP BY something, you split the table into different piles based on the value of each row.
SELECT MAX(height_cm), species 
FROM friends_of_pickles
GROUP BY species;










--SQLBOLT--

-- # Find the movie with a row id of 6
SELECT * 
FROM movies
WHERE id=6;


-- # Find the movies released in the years between 2000 and 2010
SELECT * 
FROM movies
WHERE year BETWEEN 2000 AND 2010;


-- # Find the movies not released in the years between 2000 and 2010
SELECT * 
FROM movies
WHERE year NOT BETWEEN 2000 AND 2010;


-- # Find the first 5 Pixar movies and their release year
SELECT title, year 
FROM movies
LIMIT 5;

-- # Find all the Toy Story movies ✓
SELECT * 
FROM movies
WHERE title LIKE "Toy Story%";

-- # Find all the movies directed by John Lasseter
SELECT * 
FROM movies
WHERE Director LIKE "John Lasseter";


-- # Find all the movies (and director) not directed by John Lasseter
SELECT * 
FROM movies
WHERE Director NOT LIKE "John Lasseter";


-- # Find all the WALL-* movies
SELECT * 
FROM movies
WHERE Title LIKE "WALL-%";





-- Exercise 4 — Tasks
-- List all directors of Pixar movies (alphabetically), without duplicates ✓
SELECT DISTINCT director 
FROM movies 
ORDER BY director;


-- List the last four Pixar movies released (ordered from most recent to least)
SELECT title 
FROM movies 
ORDER BY year 
DESC LIMIT 4;


-- List the first five Pixar movies sorted alphabetically
SELECT title 
FROM movies 
ORDER BY title ASC 
LIMIT 5;


-- List the next five Pixar movies sorted alphabetically
SELECT title 
FROM movies 
ORDER BY title ASC LIMIT 5 OFFSET 5;


-- Review 1 — Tasks
-- List all the Canadian cities and their populations ✓
SELECT * FROM north_american_cities WHERE country ="Canada";


-- Order all the cities in the United States by their latitude from north to south
SELECT * 
FROM north_american_cities 
WHERE country ="United States"
ORDER BY latitude DESC;


-- List all the cities west of Chicago, ordered from west to east
SELECT * 
FROM north_american_cities 
WHERE country ="United States"
    AND longitude < -87.629798
ORDER BY longitude;

--SOLUTION: 
SELECT city, longitude FROM north_american_cities
WHERE longitude < -87.629798
ORDER BY longitude ASC;


-- List the two largest cities in Mexico (by population)
SELECT city, population FROM north_american_cities
WHERE country ="Mexico"
ORDER BY population DESC LIMIT 2;


-- List the third and fourth largest cities (by population) in the United States and their population
SELECT city, population FROM north_american_cities
WHERE country ="United States"
ORDER BY population DESC LIMIT 2 OFFSET 2;




